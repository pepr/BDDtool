- fix tsyn.py
- write tsynTest.py

- catchtest to features -- generating missing .feature documents
  from tests as .featurenew
- (3, None, 'lexid') as marker for including i18n portions for lexan

- 'tag' element for both scenarios and test cases -- also for descriptions?

- synchronizace feature seznamu se seznamem extrahovaným z jazyka
- komentáře v angličtině

- build also Python 2.7 version with the same functionality
- possibly a C++ implementation of the BDDtool


To be tested
============
- Recognizing Catch scenarios with various ways of formatting and with
  nested curly braces (i.e. better parser)


Variant prefixes of element descriptions
========================================
- volnější forma uvození klíčových vět ve .feature (bez dvojtečky)
- volnější forma rozpoznává, že je volnější a upravuje interpunkci
  na začátku a na konci extrahovaných textů
- volnější i přísná forma jsou rovnocenné (po řádcích)


Internationalization
====================
- jazykové varianty klíčových slov na jedno místo pro snadné úpravy
  (Scenario, Scénář, Example, Příklad)
- různé jazykové elementy lze míchat; default jazyk se rozpoznává
  podle klíčového slova použitého pro element Feature
- ability to tell the output human language form via an option


Possible extension of the BDDtool
=================================
- generating skeletons for Python unit testing -- then this application
  could test itself (eat my own dog's food for this Python application).
- generating skeletons for Java, C# etc.
