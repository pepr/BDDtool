BDD Tool -- Behaviour Driven Development
========================================
Plan

- tlex must recognize C++ statements and nested code blocks in {} to skip them
  correctly. The question is whether the nested Catch construct can also
  be surrounded by C++ plain block braces {}.

- How to capture nesting of SECTIONs in the feature file?
- How to include include i18n portions for the tokens?

- diff: compare syntax trees from the feature description and from the Catch source

- build also Python 2.7 version with the same functionality
- possibly a C++ implementation of the BDDtool


To be tested
------------

- Tests for all parts (tlex, tsyn, felex, fesyn):
  - errorneous examples
  - more tests

- tsyn test: 'code' with /* c comment that continues
  on more lines */


Variant prefixes of element descriptions
----------------------------------------
- more free form of sentences in .feature (no colon)
- per human-language based code for fixing the extracted info from
  the free form (basically punctuation at the beginning and at the end
  of the extracted parts -- thiking about Czech here, possibly no problems
  in English)
- the strict and the free form are equal in the semantic sense

Internationalization
--------------------

- human-language variants of keywords in the .feature files
  (Scenario, Scénář, Example, Příklad)
- ability to tell the output human-language form via an option


Possible extension of the BDDtool
---------------------------------

- generating skeletons for Python unit testing -- then this application
  could test itself (eat my own dog's food for this Python application).
- generating skeletons for Java, C# etc.

- Extending GIVEN and THEN -- the input and output. Here is the example
  from `asciidoctor/features/open_block.feature`
  +
  ------
# language: en
Feature: Open Blocks
  In order to group content in a generic container
  As a writer
  I want to be able to wrap content in an open block


  Scenario: Render an open block that contains a paragraph to HTML
  Given the AsciiDoc source
    """
    --
    A paragraph in an open block.
    --
    """
  When it is converted to html
  Then the result should match the HTML source
    """
    <div class="openblock">
    <div class="content">
    <div class="paragraph">
    <p>A paragraph in an open block.</p>
    </div>
    </div>
    </div>
    """
  ------